apiVersion: v1
kind: Service
metadata:
  name: loki
  labels:
    app: loki
spec:
  ports:
    - name: loki
      port: 3100
      protocol: TCP
      targetPort: 3100
  selector:
    app: loki-server

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki-statefulset
  namespace: default
spec:
  serviceName: loki
  replicas: 1
  selector:
    matchLabels:
      app: loki-server
  template:
    metadata:
      labels:
        app: loki-server
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - prometheus-statefulset-0
            topologyKey: "kubernetes.io/hostname"
      volumes:
        - name: loki-config-volume
          configMap:
            defaultMode: 420
            name: loki-server-conf
      containers:
        - name: loki
          resources:
            limits:
              cpu: 1500m
              memory: 3500Mi
            requests:
              cpu: 1500m
              memory: 3500Mi
          image: grafana/loki:master
          imagePullPolicy: Always
          args:
            - "--config.file=/etc/loki/loki.yaml"
          ports:
            - name: loki
              containerPort: 3100
              protocol: TCP
          volumeMounts:
            - name: loki-config-volume
              mountPath: /etc/loki/
            - name: loki-storage-volume
              mountPath: /data/
  volumeClaimTemplates:
    - metadata:
        name: loki-storage-volume
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 40Gi
